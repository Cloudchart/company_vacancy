$person-vacancy-filter-width: $base-unit * 15;
$person-vacancy-filter-toggle-button-size: $base-unit * 2;
$person-vacancy-filter-toggle-button-font-size: 14pt;
$person-vacancy-filter-z-index: 2000;

header.blueprint {
  margin-bottom: 0;
}

footer.blueprint {
  display: none;
}

main.blueprint article.chart {
  
  @include position(absolute, 0px 0px 0px 0px);

  background-color: #eee;
  background-image: image-url('chart-background.png');
  background-position: center center;
  background-size: 50pt;
  overflow: hidden;
  
  section.chart {
    @include position(absolute, 0px 0px 0px 0px);
    

    > h1.placeholder {
      @include position(absolute, 50% 0px 0 0px);
      font-size: 40pt;
      font-weight: 600;
      margin: -25pt 0 0;
      opacity: .05;
      white-space: nowrap;
      text-align: center;
    }
    

    > .node {
      @include position(absolute, 0px null null 0px);
      background-color: #f99;
      
      cursor: pointer;
      font-size: 12pt;
      padding: $base-unit / 2 $base-unit;
      text-align: center;
      
      &.locked {
        opacity: .25;
      }
      
      &.captured {
        margin-top: -10pt;
        margin-left: -10pt;
        padding: $base-unit / 2 + 10pt $base-unit + 10pt;
      }
      
      > h2 {
        font-size: inherit;
        margin: 0;
      }
      
      > ul {
        list-style: none;
        margin: 0;
        padding: 0;
        
        li.vacancy {
          font-style: italic;
        }
      }
      
      @mixin node-flag($height, $width, $color) {
        background-color: $color;
        height: $height - $width;
        width: $width;
        
        &::after {
          border: $width / 2 solid $color;
          border-bottom-color: transparent;
          bottom: - $width;
          content: '';
          height: $width;
          left: 0;
          position: absolute;
          width: $width;
        }
      }
      
      .flag {
        @include node-flag(18pt, 12pt, hsl(0, 82%, 57%));
        position: absolute;
        right: 2pt;
        top: -2pt;
      }
      
    }
    
  }
  
  
}


.modal-container form.node {
  
  padding: $base-unit $base-unit * 2;
  
  section.title {
    
    input {
      width: 100%;
    }
    
  }
  
  div.color-indices {
    @include display(flex);
    
    margin-right: $base-unit / 2;
    
    label {
      @include display(flex);
      overflow: hidden;
      position: relative;
      width: $base-unit * 2;
      
      &:not(:first-child) {
        margin-left: $base-unit / 4;
      }
      
      input {
        position: absolute;
        left: - $base-unit * 2;
      }
      
      i.fa {
        color: hsl(0, 100%, 100%);
        font-size: 15pt;
        margin: auto;
        margin-left: - $base-unit * 2;
      }
      
      input:checked ~ i.fa {
        margin-left: auto;
      }
    }
  }
  
  ul.identities {
    @include clearfix;
    
    list-style: none;
    margin: $base-unit 0 0;
    padding: 0;
    overflow: scroll;
    
    > li {
      float: left;
      margin: $base-unit 0 0;
      width: $base-unit * 15;
      padding-right: $base-unit;
      
      &.placeholder {
        @include display(flex);

        border: 2pt dashed #000;
        margin-top: $base-unit * 2;
        opacity: .25;
        padding: $base-unit;
        width: 100%;

        p {
          font-size: 16pt;
          margin: auto;
        }
        
        &.captured {
          border-color: hsl(120, 50%, 50%);
        }
      }
    }
  }
  
  section.buttons {
    @include display(flex);
    
    margin-top: $base-unit * 2;
    
    .spacer {
      @include flex(1);
    }
  }
  
}
