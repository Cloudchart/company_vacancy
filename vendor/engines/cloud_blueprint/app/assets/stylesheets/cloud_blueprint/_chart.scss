$person-vacancy-filter-width: $base-unit * 15;
$person-vacancy-filter-toggle-button-size: $base-unit * 2;
$person-vacancy-filter-toggle-button-font-size: 14pt;
$person-vacancy-filter-z-index: 2000;

header.blueprint {
  margin-bottom: 0;
}

footer.blueprint {
  display: none;
}

main.blueprint article.chart {
  
  background-color: #eee;
  overflow: hidden;
  @include position(absolute, 0px 0px 0px 0px);
  
  
  aside.person-vacancy-filter {
    @include display(flex);
    @include flex-direction(column);
    @include position(absolute, 0px null 0px $person-vacancy-filter-width * -1);

    background-color: #ccc;
    padding: $base-unit;
    width: $person-vacancy-filter-width;
    z-index: $person-vacancy-filter-z-index;
    
    label.search {

      @include display(flex);

      background-color: #fff;
      border: 1pt solid #eee;
      border-radius: 5pt;
      font-size: 15pt;
      padding: $base-unit / 2;
      
      > * {
        margin: auto;
      }
      
      input {
        @include flex(1);
        border: none;
        font-weight: 300;
        outline: none;
        padding-left: $base-unit / 2;
      }
    }
    
    div.people-vacancies {
      @include flex(1);
      margin: $base-unit 0;
      overflow: scroll;
    }
    
    section.buttons {
      @include display(flex);
      @include justify-content(space-between);
      
      button {
        height: $base-unit * 2;
        font-size: 15pt;
        line-height: $base-unit * 2;
        padding: 0;
        width: $base-unit * 3;
      }
    }
    
    button.toggle {
      @include position(absolute, 50% 0px 0 0);

      background-color: #ccc;
      border: none;
      font-size: $person-vacancy-filter-toggle-button-font-size;
      margin: $person-vacancy-filter-toggle-button-size / -2 $person-vacancy-filter-toggle-button-size * -.75 0 0;
      border-top-right-radius: $person-vacancy-filter-toggle-button-size / 2;
      border-bottom-right-radius: $person-vacancy-filter-toggle-button-size / 2;
      height: $person-vacancy-filter-toggle-button-size;
      width: $person-vacancy-filter-toggle-button-size * .75;
      text-align: left;
      z-index: $person-vacancy-filter-z-index - 10;
    }
    
  }
  
  
  section.chart {
    @include position(absolute, 0px 0px 0px 0px);
    
    > .node {
      @include position(absolute, 0px null null 0px);
      background-color: #f99;
      
      cursor: pointer;
      font-size: 12pt;
      padding: $base-unit / 2 $base-unit;
      text-align: center;
      
      &.locked {
        opacity: .25;
      }
      
      &.captured {
        margin-top: -10pt;
        margin-left: -10pt;
        padding: $base-unit / 2 + 10pt $base-unit + 10pt;
      }
      
      > h2 {
        font-size: inherit;
        margin: 0;
      }
      
      > ul {
        list-style: none;
        margin: 0;
        padding: 0;
      }
      
      @mixin node-flag($height, $width, $color) {
        background-color: $color;
        height: $height - $width;
        width: $width;
        
        &::after {
          border: $width / 2 solid $color;
          border-bottom-color: transparent;
          bottom: - $width;
          content: '';
          height: $width;
          left: 0;
          position: absolute;
          width: $width;
        }
      }
      
      .flag {
        @include node-flag(18pt, 12pt, hsl(0, 82%, 57%));
        position: absolute;
        right: 2pt;
        top: -2pt;
      }
      
    }
    
  }
  
  
  > section.modal-overlay {
    @include position(absolute, 0px 0px 0px $identity-filter-width);
    
    background-color: hsla(0, 100%, 100%, 1);
    z-index: $identity-filter-z-index + 1;
    
    > .close {
      @include position(absolute, $base-unit $base-unit 0 0);
      
      cursor: pointer;
      font-size: $base-unit;
    }
  }
  
  
}

.modal-container form.person,
.modal-container form.vacancy {
  @include display(flex);
  @include flex-direction(column);
  
  padding: $base-unit;
  position: relative;
  width: $base-unit * 30;
  
  input,
  textarea {
    width: 100%;
  }
  
  textarea {
    margin-top: $base-unit;
  }
  
  section.buttons {
    @include display(flex);
    
    margin-top: $base-unit;
    
    .spacer {
      @include flex(1);
    }
    
  }

}

.modal-container form.person {
  
  padding-left: $base-unit * 6;
  
  aside {
    @include display(flex);
    @include position(absolute, $base-unit null null $base-unit);
    
    border: 1px solid #ccc;
    border-radius: $base-unit * 2;
    height: $base-unit * 4;
    width: $base-unit * 4;
    
    > * {
      margin: auto;
    }
    
    i.fa {
      font-size: 20pt;
    }
  }
  
  
  section.name {
    @include display(flex);
  }
  
  section.buttons {
    margin-left: - $base-unit * 5;
  }
  
}

.modal-container form.node {
  
  //border: 2pt solid transparent;
  padding: $base-unit * 2;
  width: $base-unit * 40;
  
  section.title {
    
    input {
      width: 100%;
    }
    
  }
  
  div.color-indices {
    @include display(flex);
    
    margin-right: $base-unit / 2;
    
    label {
      @include display(flex);
      overflow: hidden;
      position: relative;
      width: $base-unit * 2;
      
      &:not(:first-child) {
        margin-left: $base-unit / 4;
      }
      
      input {
        position: absolute;
        left: - $base-unit * 2;
      }
      
      i.fa {
        color: hsl(0, 100%, 100%);
        font-size: 15pt;
        margin: auto;
        margin-left: - $base-unit * 2;
      }
      
      input:checked ~ i.fa {
        margin-left: auto;
      }
    }
  }
  
  ul.identities {
    @include clearfix;
    
    list-style: none;
    margin: $base-unit 0 0;
    max-height: $base-unit * 6;
    padding: 0;
    overflow: scroll;
    
    > li {
      @include filter-identity;
      float: left;
      margin: $base-unit 0 0;
      width: 50%;
    }
  }
  
  section.buttons {
    @include display(flex);
    
    margin-top: $base-unit * 2;
    
    .spacer {
      @include flex(1);
    }
  }
  
}
