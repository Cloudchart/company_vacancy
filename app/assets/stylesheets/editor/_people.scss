// Editor -> People
//

article.editor > section.people {

  .list {
    @include display(flex);
    @include flex-wrap(wrap);
    
    > .row {
      width: 100%;

      @include display(flex);
      @include justify-content(center);

      > .item {
        @include flex(0 0 24.5%);

        margin: 0;
        margin-left: $editor-gutter;
        margin-top: 20px;
        padding: 0;

        &.placeholder,
        &:first-child {
          margin-left: 0;
        }

        &.placeholder .person > aside {
          background-color: $editor-placeholder-background-color;
          color: $editor-placeholder-color;

          span {
            font-size: 100px;
          }
        }

        &.placeholder:not(:first-child) {
          @include flex-basis(0);

          padding: 0;
          position: relative;

          > .person {
            @include position(absolute, 50px 0 0 -2 * $editor-gutter);
            @include transform(scale(0.5, 0.5));
            @include transition(all 150ms ease-out);
            
            height: 100px;
            opacity: 0;
            width: 100px;

            figure > i.hint {
              display: none;
            }
          }
        }
      }

      &:first-child {
        > .item {
          margin-top: 0;
        }
      }

      &:last-child {
        > .item:not(.placeholder) {
          @include transition(none);
        }
      }
    }
  }

  .list.animated > .row:last-child {
    > .item:not(.placeholder) {
      @include transition(transform 150ms ease-out);
    }
  } 

  &:hover .list:not(.frozen),
  .list.hovered {
    > .row:last-child {
      > .item:not(.placeholder) {
        @include transform(translateX(-3 * $editor-gutter));
      }

      > .placeholder:not(:first-child) {
        > .person {
          @include transform(scale(1, 1));
          opacity: 1;
        }
      }
    }
  }
}


// Editor -> Person
//
article.editor > section.people div.person {
  margin: 0;
  position: relative;
  
  > i.remove {
    @include position(absolute, $editor-gutter / 2 $editor-gutter / 2 0 0);
    @include transform(translate(-100%, 100%));
    @include transition(all 150ms ease-out);

    color: $editor-remove-button-color;
    cursor: pointer;
    font-size: $editor-remove-button-font-size;
    visibility: hidden;
  }

  &:hover {
    > i.remove {
      @include transform(translate(0, 0));
    }
  }
  
  &.editable:hover > i.remove {
    visibility: visible;
  }
  
  &.editable > aside {
    cursor: pointer;
  }
  
  > footer {
    padding: 10px 20px 0 20px;
    
    > p {
      margin: 0;
      text-align: center;
      white-space: wrap;
      
      &.name {
        font-size: $editor-person-name-font-size;
      }

      &.occupation {
        color: hsl(0, 0%, 50%);
        font-size: $editor-person-occupation-font-size;
      }
    }
  }
}


// Person -> Avatar
//
.person > aside.avatar {
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  border-radius: 50%;
  height: 0;
  margin: 0;
  padding: 0;
  padding-top: 100%;
  position: relative;
  
  > figure {
    @include position(absolute, 50% 0px 0 0px);
    @include transform(translateY(-50%));
    
    display: inline-block;
    font-size: $editor-placeholder-font-size;
    font-weight: 100;
    line-height: 1em;
    text-align: center;
    
    i.hint {
      @include position(absolute, 85% 0px 0 0px);

      font-size: .25em;
      font-style: normal;
      line-height: 1em;
      text-transform: uppercase;
    }
  }
  
}
